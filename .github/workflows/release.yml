name: release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]*"

permissions:
  contents: write

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10

jobs:
  build:
    name: Build release binaries
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4

      - name: Setup | Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools pkg-config libssl-dev lua5.4 liblua5.4-dev

      - name: Setup | Rust
        uses: dtolnay/rust-toolchain@nightly

      - name: Build | Build
        run: |
          cargo build --release

      - name: Post Build | Prepare artifacts [-nix]
        run: |
          cp -r .env-example app.lua README.md target/release
          cd target/release
          tar czvf ../../lua-bridge-linux.tar.gz lua-bridge .env-example app.lua README.md
          pwd
          ls -lah
          cd -
          pwd
          ls -lah
      - name: Deploy | Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lua-bridge-linux.tar.gz
          path: lua-bridge-linux.tar.gz

  upload_artifacts:
    name: Add Build Artifacts to Release
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Artifacts
        uses: actions/download-artifact@v4

      - name: Display structure of downloaded files
        run: ls -R

      - name: Setup | Checksums
        run: for file in lua-bridge-*/lua-bridge-*; do openssl dgst -sha256 -r "$file" | awk '{print $1}' > "${file}.sha256"; done

      - name: Build | Add Artifacts to Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: lua-bridge-*/lua-bridge-*

  publish_docker:
    name: Publish Docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build image
        uses: docker/build-push-action@v4
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          tags: |
            yinheli/lua-bridge:latest
            yinheli/lua-bridge:${{ github.ref_name }}
